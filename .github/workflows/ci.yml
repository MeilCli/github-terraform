name: CI
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_github_token: ${{ secrets.MEILCLI_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      - name: Comment to pull request
        uses: MeilCli/hidable-comment-action@v1
        if: github.event_name == 'pull_request'
        with:
          number: ${{ github.event.pull_request.number }}
          show: true
          id: "terraform-result"
          body: |
            Result:
            #### Terraform Format and Style üñå`${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ`${{ steps.validate.outcome }}`
            #### Terraform Plan üìñ`${{ steps.plan.outcome }}`
            <details><summary>Show Plan</summary>

            ```
            ${{ steps.plan.outputs.stdout }}
            ```

            </details>
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  deploy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_github_token: ${{ secrets.MEILCLI_TOKEN }}
    needs: terraform
    environment:
      name: production
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.2
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Apply
        run: terraform apply -auto-approve
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          message: "update tfstate"
